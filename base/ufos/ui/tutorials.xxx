// ==================
// TUTORIALS MENU
// ==================

window tutorials
{
	{
		background		"ui/main_bg"
	}

	string headline
	{
		string			"_TUTORIALS"
		size			"500 50"
		pos				"262 50"
		font			"f_title"
		color			"0.59 0.78 0.56 1"
		contentalign	ALIGN_CC
	}

	panel buttons
	{
		{
			pos			"312 250"
			size		"420 400"
		}

		panel dynbuttons
		{
			{
				pos				"0 0"
				size			"400 300"
				layout			LAYOUT_TOP_DOWN_FLOW
				layoutMargin	15
				wheelscrollable	true
				onViewChange {
						*node:parent.tutorials_scroll@fullsize = <fullsize>
						*node:parent.tutorials_scroll@current = <viewpos>
						*node:parent.tutorials_scroll@viewsize = <viewsize>
				}
			}
		}

		vscrollbar tutorials_scroll
		{
			{
				image			"ui/scrollbar_v"
				pos				"402 0"
				height			"300"
				current			0
				fullsize		16
				viewsize		6
				hidewhenunused	true
				onChange { *node:parent.dynbuttons@viewpos = <current> }
			}

		}

		MainMenuExitBtn button_back
		{
			pos		"0 300"
			onClick	{ cmd "ui_pop;" }
			string	"_BACK"
		}
	}

	fuzzyScreen overlay { }

	func onWindowOpened
	{
		cmd	"gettutorials;"
	}

	confunc tutorialsListAdd
	{
		call *node:root.buttons.dynbuttons@createChild("tutorial<1>", "MainMenuBtn")
		*node:root.buttons.dynbuttons.tutorial<1>@string = "<2>"
		call *node:root.buttons.dynbuttons.tutorial<1>@createChild("index","data")
		*node:root.buttons.dynbuttons.tutorial<1>.index@integer = <1>
		*node:root.buttons.dynbuttons.tutorial<1>@onClick = { cmd "tutoriallist_click <node:this.index@integer>;" }
	}

	confunc tutorialsListClear
	{
		call *node:root.buttons.dynbuttons@removeAllChild
	}
}
