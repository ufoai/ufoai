// ==================
// MARKET MENU
// ==================

component cmpMarketItem extends panel {
	{
		size "425 25"
		onClick {
			cmd "ui_market_select <node:this.id@string>;"
		}
	}

	data id {
	}

	checkbox_blue autosell {
		current		0
		pos			"0 0"
		size		"22 18"

		onChange {
			cmd "ui_market_setautosell \"<node:parent.id@string>\" <node:this@current>;"
			cmd "ui_market_fill <cvar:ui_market_category>;"
			cmd "ui_market_select <node:parent.id@string>;"
		}
	}

	string name {
		color		"0 .78 0 1"
		pos			"25 0"
		size		"250 25"
		ghost		true
	}
	string storage {
		color		"0 .78 0 1"
		contentalign	ALIGN_CR
		pos			"280 0"
		size		"60 25"
		ghost		true
	}
	string market {
		color		"0 .78 0 1"
		contentalign	ALIGN_CR
		pos			"370 0"
		size		"46 25"
		ghost true
	}
	string price {
		color		"0 .78 0 1"
		contentalign	ALIGN_CR
		pos			"432 0"
		size		"60 25"
		ghost		true
	}

	spinner_blue buysell {
		tooltip		"_Buy and sell item"
		pos			"346 0"
		onChange {
			if ( ( ( <node:parent.storage@string> + <node:parent.market@string> ) + <lastdiff> ) < 1 ) {
				*node:root.selected@string = ""
			}
			cmd "ui_market_buy \"<node:parent.id@string>\" <lastdiff>;"
			cmd "ui_market_fill <cvar:ui_market_category>;"
			if ( *node:root.selected@string ne "" ) {
				cmd "ui_market_select \"<node:parent.id@string>\";"
			}
		}
	}
}

window market extends objectinfo {
	/** @todo Remove me */
	{ } // empty properties to fix parsing problem with "image" token (behaviour or property?)

	// ==================
	// background
	// ==================

	image background {
		src		"background/base_bg"
	}

	cmpBaseHeader baseHeader {
	}

	// ==================
	// tab
	// ==================

	data selected {
		string	""
	}

	panel tab_background {
		pos		"24 96"
		size	"986 56"
		background	"ui/panel_tab"
	}

	tab market_navigation {
		{
			pos		"47 106"
			size	"938 39"
			cvar	*cvar:ui_market_category

			onChange {
				*node:root.selected@string = ""
				cmd "ui_market_fill <cvar:ui_market_category>;"
			}
		}

		option primary {
			label	"_Primary"
			value	"primary"
		}
		option secondary {
			label	"_Secondary"
			value	"secondary"
		}
		option heavy {
			label	"_Heavy"
			value	"heavy"
		}
		option misc {
			label	"_Misc"
			value	"misc"
		}
		option armour {
			label	"_Armour"
			value	"armour"
		}
		option craftitem {
			label	"_Craft items"
			value	"craftitem"
		}
		option aircraft {
			label	"_Aircraft"
			value	"aircraft"
		}
		option dummy {
			label	"_Other"
			value	"dummy"
		}
		option ugvitem {
			label	"_UGV items"
			value	"ugvitem"
		}
	}

	// ==================
	// lists
	// ==================

	rows lines {
		pos			"28 175"
		size		"530 568"
		color1		"0 0.08 0 1"
		color2		"0 0.16 0 1"
		lineheight	25
	}

	panel verticalline {
		pos		"451 175"
		size	"4 565"
		bgcolor	"0.03 0.42 0.03 1"
	}

	panel itemlist_back {
		pos		"12 160"
		size	"553 597"
		background	"ui/panel_grey_green_large2"
	}
	string name_label {
		string		"_Name"
		pos			"55 180"
		size		"250 25"
		color		"0 .78 0 1"
	}
	string storage_label {
		string		"_Store"
		tooltip		"_Number of such items in base"
		pos			"325 180"
		size		"60 25"
		color		"0 .78 0 1"
		contentalign	ALIGN_CR
	}
	string market_label {
		string		"_Market"
		tooltip		"_Number of such items on the market"
		pos			"390 180"
		size		"60 25"
		color		"0 .78 0 1"
		contentalign	ALIGN_CR
	}
	string price {
		string		"_Price"
		pos			"462 180"
		size		"60 25"
		color		"0 .78 0 1"
		contentalign	ALIGN_CR
	}

	panel itemlist {
		pos		"30 205"
		size	"500 535"
		layout	LAYOUT_TOP_DOWN_FLOW
		wheelscrollable	true
		onViewChange {
			*node:parent.itemlist_scroll@fullsize = <fullsize>
			*node:parent.itemlist_scroll@current = <viewpos>
			*node:parent.itemlist_scroll@viewsize = <viewsize>
		}
	}
	vscrollbar itemlist_scroll {
		image		"ui/scrollbar_v_green"
		pos			"530 205"
		height		"535"
		current		0
		viewsize	21
		fullsize	21
		hidewhenunused true
		onChange {
			*node:parent.itemlist@viewpos = <current>
		}
	}

	/*
	 * @brief Select an entry from thelist
	 * <1> item id
	 */
	confunc ui_market_select {
		if ( *node:root.selected@string ne "" ) {
			*node:root.itemlist.item_<node:root.selected@string>.name@color = "0 .78 0 1"
			*node:root.itemlist.item_<node:root.selected@string>.storage@color = "0 .78 0 1"
			*node:root.itemlist.item_<node:root.selected@string>.market@color = "0 .78 0 1"
			*node:root.itemlist.item_<node:root.selected@string>.price@color = "0 .78 0 1"
		}
		*node:root.selected@string = <1>
		if ( *node:root.selected@string ne "" ) {
			*node:root.itemlist.item_<node:root.selected@string>.name@color = "1 1 1 1"
			*node:root.itemlist.item_<node:root.selected@string>.storage@color = "1 1 1 1"
			*node:root.itemlist.item_<node:root.selected@string>.market@color = "1 1 1 1"
			*node:root.itemlist.item_<node:root.selected@string>.price@color = "1 1 1 1"
			cmd "ui_market_showinfo <1>;"
		}
	}
	/*
	 * @brief Confunc to clear the itemlist
	 */
	confunc ui_market_clear {
		call *node:root.itemlist@removeAllchild
	}
	/*
	 * @brief Confunc to add the item to market's itemlist
	 * <1> reference id
	 * <2> name
	 * <3> count at base
	 * <4> count on market
	 * <5> buy price
	 * <6> sell price
	 * <7> autosell (0: off, 1: on, -: not available"
	 * <8> tooltip for disabled entries, "-" otherwise
     */
	confunc ui_market_add {
		call *node:root.itemlist@createChild("item_<1>", "cmpMarketItem")

		// autosell
		*node:root.itemlist.item_<1>.id@string = <7>
		if ( *node:root.itemlist.item_<1>.id@string eq "-" ) {
			*node:root.itemlist.item_<1>.autosell@invis = true
		} else {
			*node:root.itemlist.item_<1>.autosell@current = <7>
		}
		*node:root.itemlist.item_<1>.id@string = <8>
		if ( *node:root.itemlist.item_<1>.id@string ne "-" ) {
			*node:root.itemlist.item_<1>.autosell@tooltip = <8>
			*node:root.itemlist.item_<1>.autosell@disabled = true
			*node:root.itemlist.item_<1>.buysell@disabled = true
			*node:root.itemlist.item_<1>.buysell@tooltip = <8>
		}

		*node:root.itemlist.item_<1>.id@string = <1>
		*node:root.itemlist.item_<1>.name@string = <2>
		*node:root.itemlist.item_<1>.storage@string = <3>
		*node:root.itemlist.item_<1>.market@string = <4>
		*node:root.itemlist.item_<1>.price@string = <5>
		if ( *node:root.itemlist.item_<1>.price@string eq "0" ) {
			*node:root.itemlist.item_<1>.price@string = <6>
		}
		*node:root.itemlist.item_<1>.buysell@min = 0
		*node:root.itemlist.item_<1>.buysell@current = <3>
		*node:root.itemlist.item_<1>.buysell@max = ( <3> + <4> )

		if ( *node:root.selected@string eq "" ) {
			call *node:root.ui_market_select ( "<1>" )
		}
	}

	panel basedescription {
		{
			pos		"588 167"
			size	"410 115"
			background	"ui/panel_grey_green"
		}

		string header_capacity {
			string 		"_Capacity"
			pos			"15 20"
			size		"230 20"
			font		"f_small_bold"
			contentalign	ALIGN_CL
		}
		string header_free {
			string 		"_free"
			pos			"245 20"
			size		"75 20"
			font		"f_small_bold"
			contentalign	ALIGN_CR
		}
		string header_all {
			string 		"_all"
			pos			"320 20"
			size		"75 20"
			font		"f_small_bold"
			contentalign	ALIGN_CR
		}

		string storage_caption {
			string 		"_Storage"
			pos			"15 40"
			size		"230 20"
			font		"f_small"
		}
		string storage_free {
			pos			"245 40"
			size		"75 20"
			font		"f_small"
			contentalign	ALIGN_CR
		}
		string storage_all {
			pos			"320 40"
			size		"75 20"
			font		"f_small"
			contentalign	ALIGN_CR
		}
		string interceptor_caption {
			string 		"_Interceptor Hangar"
			pos			"15 60"
			size		"230 20"
			font		"f_small"
		}
		string interceptor_free {
			pos			"245 60"
			size		"75 20"
			font		"f_small"
			contentalign	ALIGN_CR
		}
		string interceptor_all {
			pos			"320 60"
			size		"75 20"
			font		"f_small"
			contentalign	ALIGN_CR
		}
		string dropship_caption {
			string 		"_Dropship Hangar"
			pos			"15 80"
			size		"230 20"
			font		"f_small"
		}
		string dropship_free {
			pos			"245 80"
			size		"75 20"
			font		"f_small"
			contentalign	ALIGN_CR
		}
		string dropship_all {
			pos			"320 80"
			size		"75 20"
			font		"f_small"
			contentalign	ALIGN_CR
		}

		confunc ui_market_update_caps {
			*node:parent.storage_free@string = "<1>"
			*node:parent.storage_all@string = "<2>"
			*node:parent.interceptor_free@string = "<3>"
			*node:parent.interceptor_all@string = "<4>"
			*node:parent.dropship_free@string = "<5>"
			*node:parent.dropship_all@string = "<6>"
		}

	}

	confunc listen_openpedia {
		cmd "ui_market_select \"<node:root.selected@string>\";"
		cmd "ui_removelistener ufopedia@onWindowClosed <path:this>;"
	}

	panel itemdescription {
		{
			pos		"588 303"
			size	"410 455"
			background	"ui/panel_grey_green"
		}

		// ==================
		// item description
		// ==================

		string itemname
		{
			visiblewhen "*cvar:ui_market_category ne \"aircraft\""	// for everything except aircraft
			string		*cvar:mn_itemname
			pos			"22 25"
			size		"365 20"
			contentalign	ALIGN_UC
		}
		string aircraftname
		{
			visiblewhen "*cvar:ui_market_category eq \"aircraft\""	// Only for aircraft.
			string		*cvar:mn_aircraftname
			pos			"22 25"
			size		"365 20"
			contentalign	ALIGN_UC
		}

		button ufopedia_link
		{
			icon		"icons/bordered_magnifying_glass"
			tooltip		"_UFOpaedia"
			pos			"370 27"
			size		"16 16"
			onClick		{
				cmd "ui_addlistener ufopedia@onWindowClosed <path:root>.listen_openpedia;"
				cmd "market_openpedia;"
			}
		}

		item itemmodel
		{
			src			*cvar:mn_item
			pos			"13 55"
			size		"384 200"
			angles		"0 180 90"
			omega		"0 10 0"
			autoscale	true
		}

		text description
		{
			dataid		TEXT_ITEMDESCRIPTION
			pos			"32 257"
			size		"336 120"
			rows		"8"
			lineheight	15
			tabwidth	168
			font		"f_verysmall"
			onViewChange {
				*node:root.itemdescription.description_scroll@fullsize = <fullsize>
				*node:root.itemdescription.description_scroll@current = <viewpos>
			}
			onWheel {
				*node:root.itemdescription.description_scroll@current = <viewpos>
			}
		}
		vscrollbar description_scroll {
			image		"ui/scrollbar_v_green"
			pos			"370 257"
			height		"120"
			current		0
			viewsize	8
			fullsize	8
			hidewhenunused true
			onChange {
				*node:root.itemdescription.description@viewpos = <current>
			}
		}

		// ======================
		// useable weapon or ammo
		// ======================

		string header_item
		{
			string	"_With:"
			pos		"32 390"
			size	"100 16"
			font	"f_small"
		}

		button action_dec
		{
			pos		"142 390"
			icon	"icons/prev"
			size	"16 16"
			onClick	{ cmd "mn_decreaseitem;" }
		}

		string item_name
		{
			string	*cvar:mn_linkname
			pos		"162 390"
			size	"190 16"
			contentalign	ALIGN_CC
			font	"f_small"
		}

		button action_inc
		{
			pos		"356 390"
			icon	"icons/next"
			size	"16 16"
			onClick	{ cmd "mn_increaseitem;" }
		}

		// ==================
		// firemode
		// ==================

		string header_firemode
		{
			string	"_Firemode:"
			pos		"32 414"
			size	"100 16"
			font	"f_small"
		}

		button firemode_dec
		{
			tooltip "_Previous firemode"
			pos		"142 414"
			icon	"icons/prev"
			size	"16 16"
			onClick	{ cmd "mn_decreasefiremode;" }
		}

		string firemode_name
		{
			string	*cvar:mn_firemodename
			pos		"162 414"
			size	"190 16"
			contentalign	ALIGN_CC
			font	"f_small"
		}

		button firemode_inc
		{
			tooltip "_Next firemode"
			pos		"356 414"
			icon	"icons/next"
			size	"16 16"
			onClick	{ cmd "mn_increasefiremode;" }
		}

	}

	// ==================
	// init
	// ==================

	func onWindowOpened {
		*node:root.selected@string = ""
		cmd "ui_market_fill \"<cvar:ui_market_category>\";"
		*cvar:mn_lastsubmenu = "market"
	}

	func onWindowClosed {
		call *node:root.ui_market_clear
		// Call base_init so that storage data can be updated
		cmd "base_init;"
	}
}
