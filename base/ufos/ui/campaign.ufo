// ==================
// CAMPAIGN MENU
// ==================

// TODO
// - Add alert if user tries to begin without selecting a load game
// - Add info about a save when it becomes available
// - Once we can get the data about a campaign in not just one chunk, display them better
// - Several campaign windows not yet changed (end game, save game, etc.)
// - Saving doesn't use fixed slots anymore
// - cgame webapi support

component LoadSlot extends panel
{
	{
		size		"320 34"
		layout			LAYOUT_LEFT_RIGHT_FLOW
		layoutMargin	1
	}

	data filename
	{
		string		""
	}

	data index
	{
		integer		-1
	}

	TextBtn button
	{
		onClick	{
			call *node:root.set_sel_load_slot(<node:parent.index@integer>)
			*node:this@color = "1 1 1 0.9"
		}
	}

	button upload
	{
		background	"icons/upload"
		tooltip		"_Upload"
		size		"34 34"
	}

	button delete
	{
		size		"34 34"
		background	"icons/delete"
		tooltip		"_Delete this savegame"
	}
}

component SaveSlot extends panel
{
	{
		size		"320 34"
		layout			LAYOUT_LEFT_RIGHT_FLOW
		layoutMargin	1
	}

	data filename
	{
		string		""
	}

	data title
	{
		string		""
	}

	data date
	{
		string		""
	}

	data index
	{
		integer		-1
	}

	textentry name
	{
		color		"1 1 1 0.5"
		selectcolor	"1 1 1 1"
		contentalign	ALIGN_CL
		padding		8
		size		"250 34"
		clickoutabort   true
	}

	button upload
	{
		background	"icons/upload"
		tooltip		"_Upload"
		size		"34 34"
	}

	button delete
	{
		background 	"icons/delete"
		size		"34 34"
		tooltip		"_Delete this savegame"
	}
}

window campaign extends cgame_download
{
	{
		background	"ui/main_bg"
	}

	// Toolbar across the top of the screen
	MainMenuToolbar mmtoolbar { }

	// ==================
	// buttons
	// ==================

	panel cmp_sel {
		{
			size		"1024 435"
			pos			"0 90"
			bgcolor		"0.4 0.52 0.5 0.2"
		}

		MainMenuTab btn_new
		{
			{
			pos 		"0 0"
			string		"_NEW"
			bgcolor		"0.4 0.515 0.5 1"
			color		"0 0 0 0.9"
			onClick		{ call *node:root.toggle_cmp_new }
			}
			/*
			func disable {
				*node:parent@bgcolor = "0.4 0.515 0.5 0.25"
				*node:parent@color = "1 1 1 0.5"
			}*/
		}

		MainMenuTab btn_save
		{
			invis		true
			pos 		"0 0"
			string		"_SAVE"
			onClick		{ call *node:root.toggle_cmp_save }
		}

		MainMenuTab btn_load
		{
			{
			pos 		"135 0"
			string		"_LOAD"
			onClick		{ call *node:root.toggle_cmp_load }
			}
			/*
			func enable {
				*node:parent@bgcolor = "0.4 0.515 0.5 1"
				*node:parent@color = "0 0 0 0.9"
			}*/
		}

		MainMenuTab btn_download
		{
			pos 		"270 0"
			string		"_DOWNLOAD"
			onClick		{ call *node:root.toggle_cmp_download }
		}

		MainMenu3Btn btn_begin {
			{
				size 			"250 30"
				pos 			"774 405"
				string			"_BEGIN"
				bgcolor			"0.38 0.48 0.36 1"
				onMouseEnter 	{ *node:this@bgcolor = "0.59 0.78 0.56 1" }
				onMouseLeave 	{ *node:this@bgcolor = "0.38 0.48 0.36 1" }
				onClick			{ call *node:root.cmp_sel_begin }
			}
			func enable {
				*node:parent@ghost = false
				*node:parent@bgcolor = "0.38 0.48 0.36 1"
				*node:parent@color = "1 1 1 0.9"
			}
			func disable {
				*node:parent@ghost = true
				*node:parent@bgcolor = "1 1 1 0.1"
				*node:parent@color = "1 1 1 0.3"
			}
		}

		MainMenuExitBtn btn_back
		{
			size 			"250 30"
			pos 			"514 405"
			string			"_BACK"
			onClick			{ cmd "ui_pop;" }
		}

		// Campaigns and descriptions panel
		panel cmp_cmps {
			{
				pos				"10 50"
				size			"1014 355"
			}

			// List of campaigns
			optionlist cmp_list
			{
				pos				"10 0"
				size			"250 355"
				lineheight		"25"
				dataid			OPTION_CAMPAIGN_LIST
				cvar			*cvar:cp_campaign
				onClick			{ cmd "campaignlist_click <lineselected>;" }
				color			"0.4 0.515 0.5 1"
				selectcolor		"1 1 1 1"
				onChange {
					cmd "cp_getdescription <cvar:cp_campaign>;"
				}
			}

			// Description of selected campaign
			text cmp_desc
			{
				dataid		TEXT_STANDARD
				pos			"280 0"
				size		"720 360"
				lineheight	20
				rows		18
			}
		}

		// List of saved games to load
		panel cmp_loads
		{
			{
				pos				"10 50"
				size			"320 355"
				layout			LAYOUT_TOP_DOWN_FLOW
				layoutMargin	5
				invis			true
			}

			LoadSlot save0 {
			}

			LoadSlot save1 {
			}

			LoadSlot save2 {
			}

			LoadSlot save3 {
			}

			LoadSlot save4 {
			}

			LoadSlot save5 {
			}

			LoadSlot save6 {
			}

			LoadSlot save7 {
			}
		}
		// List savegames for saving the current active game
		panel cmp_saves
		{
			{
				pos				"10 50"
				size			"320 355"
				layout			LAYOUT_TOP_DOWN_FLOW
				layoutMargin	5
				invis			true
			}

			SaveSlot save0 {
			}

			SaveSlot save1 {
			}

			SaveSlot save2 {
			}

			SaveSlot save3 {
			}

			SaveSlot save4 {
			}

			SaveSlot save5 {
			}

			SaveSlot save6 {
			}

			SaveSlot save7 {
			}
		}
		// List of available downloads
		panel cmp_downloads
		{
			{
				pos				"10 50"
				size			"320 355"
				layout			LAYOUT_TOP_DOWN_FLOW
				layoutMargin	5
				invis			true
			}

			panel downloadable
			{
				{
					pos		"35 70"
					size	"440 550"
					layout			LAYOUT_TOP_DOWN_FLOW
					layoutMargin	2
				}
			}
		}
	}

	/**
	 * @brief Add a server stored file to the list of downloadable files
	 * @param <1> The file id (string)
	 * @param <2> The category
	 * @param <3> The user id of the owner
	 * @param <4> The file name
	 * @param <5> The title
	 * @param <6> Own file = 1, other users file = 0
	 */
	confunc cgamefiles_add
	{
		call *node:root.cmp_sel.cmp_downloads.downloadable@createChild("download<1>-<2>-<3>", "downloadentry")
		*node:root.cmp_sel.cmp_downloads.downloadable.download<1>-<2>-<3>.category@integer = <2>
		*node:root.cmp_sel.cmp_downloads.downloadable.download<1>-<2>-<3>.userid@integer = <3>
		*node:root.cmp_sel.cmp_downloads.downloadable.download<1>-<2>-<3>.filename@string = <4>
		*node:root.cmp_sel.cmp_downloads.downloadable.download<1>-<2>-<3>.download@string = <5>
		if ( <6> == 1 ) {
			*node:root.cmp_sel.cmp_downloads.downloadable.download<1>-<2>-<3>.delete@invis = false
		} else {
			*node:root.cmp_sel.cmp_downloads.downloadable.download<1>-<2>-<3>.delete@invis = true
		}
	}

	confunc cgamefiles_nofilesfound
	{
		call *node:root.cmp_sel.cmp_downloads.downloadable@createChild("nofiles", "string")
		*node:root.cmp_sel.cmp_downloads.downloadable.nofiles@string = "_No files uploaded yet"
	}

	/**
	 * @param <1> The file id (string)
	 * @param <2> The category
	 * @param <3> The user id of the owner
	 */
	confunc cgame_deletesuccessful
	{
		call *node:root.cmp_sel.cmp_downloads.downloadable.download<1>-<2>-<3>@delete
	}

	confunc cgamefiles_clear
	{
		call *node:root.cmp_sel.cmp_downloads.downloadable@removeAllChild
	}

	/**
	 * @param[in] <1> id of the savegame slot
	 * @param[in] <2> name of the savegame slot
	 * @param[in] <3> game date of the savegame slot
	 * @param[in] <4> real date of the savegame slot
	 * @param[in] <5> filename
	 */
	confunc update_game_info {
		//call *node:root.cmp_sel.cmp_loads@createChild("save<1>", "LoadSlot")
		*node:root.cmp_sel.cmp_loads.save<1>.filename@string = <5>
		*node:root.cmp_sel.cmp_loads.save<1>.index@integer = <1>
		if ( "<3>" ne "" ) {
			*node:root.cmp_sel.cmp_loads.save<1>.button@string = "<2> - <3>"
		} else {
			*node:root.cmp_sel.cmp_loads.save<1>.button@string = "<2>"
		}
		*node:root.cmp_sel.cmp_loads.save<1>.button@tooltip = <4>
		*node:root.cmp_sel.cmp_loads.save<1>.upload@onClick = {
			cmd "web_uploadcgame 0 <node:this.parent.filename@string>;"
		}
		*node:root.cmp_sel.cmp_loads.save<1>.delete@onClick = {

			cmd "game_delete \"slot<node:this.parent.index@integer>\";"

			*node:this.parent.filename@string	=	""
			*node:this.parent.button@string		=	""
			*node:this.parent.button@tooltip	=	""
			*node:this.parent.button@onClick	=	{ }
			*node:this.parent.index@integer		=	-1
			*node:this.parent.upload@invis		=	true
			*node:this.parent.delete@invis		=	true
		}
		if ( "<5>" ne "" ) {
			*node:root.cmp_sel.cmp_loads.save<1>.upload@invis = false
			*node:root.cmp_sel.cmp_loads.save<1>.delete@invis = false
		} else {
			*node:root.cmp_sel.cmp_loads.save<1>.upload@invis = true
			*node:root.cmp_sel.cmp_loads.save<1>.delete@invis = true
		}

		// The save part
		//call *node:root.cmp_sel.cmp_saves@createChild("save<1>", "SaveSlot")
		*node:root.cmp_sel.cmp_saves.save<1>.filename@string = <5>
		*node:root.cmp_sel.cmp_saves.save<1>.title@string = <2>
		*node:root.cmp_sel.cmp_saves.save<1>.date@string = <3>
		*node:root.cmp_sel.cmp_saves.save<1>.index@integer = <1>
		*node:root.cmp_sel.cmp_saves.save<1>.name@string = *cvar:mn_slot<1>
		if ( "<3>" ne "" ) {
			*cvar:mn_slot<1> = "<2> <3>"
		} else {
			*cvar:mn_slot<1> = "<2>"
		}
		if ( <5> eq "" ) {
			*cvar:mn_slot<1> = "_Click here to save game"
		}
		*node:root.cmp_sel.cmp_saves.save<1>.name@tooltip = <4>
		*node:root.cmp_sel.cmp_saves.save<1>.name@onClick = {
			*cvar:mn_slot<node:this.parent.index@integer> = <node:this.parent.title@string>
		}
		*node:root.cmp_sel.cmp_saves.save<1>.name@onAbort = {
			if (<node:this.parent.date@string> ne "") {
				*cvar:mn_slot<node:this.parent.index@integer> = "<node:this.parent.title@string> <node:this.parent.date@string>"
			} else {
				*cvar:mn_slot<node:this.parent.index@integer> = "<node:this.parent.title@string>"
			}
			if (<node:this.parent.filename@string> eq "") {
				cmd "echo <node:this.parent.filename@string>;"
				*cvar:mn_slot<node:this.parent.index@integer> = "_Click here to save game"
			}
		}
		*node:root.cmp_sel.cmp_saves.save<1>.name@onChange = {
			cmd "game_save \"slot<node:this.parent.index@integer>\" \"<node:this.parent.name@string>\";"
			*cvar:mn_fastexit = 1
			cmd "game_comments;"
		}
		*node:root.cmp_sel.cmp_saves.save<1>.upload@onClick = {
			cmd "web_uploadcgame 0 \"<node:this.parent.filename@string>\";"
		}
		*node:root.cmp_sel.cmp_saves.save<1>.delete@onClick = {

			cmd "game_delete \"slot<node:this.parent.index@integer>\";"

			*node:this.parent.filename@string	=	""
			*cvar:mn_slot<node:this.parent.index@integer> = "_Click here to save game"
			*node:this.parent.name@tooltip		=	""
			*node:this.parent.title@string		=	""
			*node:this.parent.date@string		=	""
			*node:this.parent.upload@invis		=	true
			*node:this.parent.delete@invis		=	true
		}
		if ( <5> eq "" ) {
			*node:root.cmp_sel.cmp_saves.save<1>.upload@invis = true
			*node:root.cmp_sel.cmp_saves.save<1>.delete@invis = true
		} else {
			*node:root.cmp_sel.cmp_saves.save<1>.upload@invis = false
			*node:root.cmp_sel.cmp_saves.save<1>.delete@invis = false
		}
	}

	/**
	 * @brief Save the proper load slot into a cvar to use later
	 * @param <1> Number of the load slot
	 */
	func set_sel_load_slot {
		*cvar:sel_load_slot = <1>
		call *node:root.cmp_sel.btn_begin.enable

		// Remove white color from any button that might be saved
		// Then add it back to the selected button
		*cvar:i = 0;
		while ( *cvar:i < 8 ) {
			*node:root.cmp_sel.cmp_loads.save<cvar:i>.button@color = "1 1 1 0.5"
			*cvar:i = ( *cvar:i + 1 )
		}
		delete *cvar:i
	}

	// Tell the begin button what to do depending on the
	// current selection (start campaign, load campaign)
	func cmp_sel_begin {
		if (*node:root.cmp_sel.cmp_cmps@invis == false) {
			cmd "cp_start <cvar:cp_campaign>;"
		} elif (*node:root.cmp_sel.cmp_loads@invis == false) {
			if (*cvar:sel_load_slot == 0) {
				cmd "game_load slot<cvar:sel_load_slot>;"
			}
			if (*cvar:sel_load_slot == 1) {
				cmd "game_load slot<cvar:sel_load_slot>;"
			}
			if (*cvar:sel_load_slot == 2) {
				cmd "game_load slot<cvar:sel_load_slot>;"
			}
			if (*cvar:sel_load_slot == 3) {
				cmd "game_load slot<cvar:sel_load_slot>;"
			}
			if (*cvar:sel_load_slot == 4) {
				cmd "game_load slot<cvar:sel_load_slot>;"
			}
			if (*cvar:sel_load_slot == 5) {
				cmd "game_load slot<cvar:sel_load_slot>;"
			}
			if (*cvar:sel_load_slot == 6) {
				cmd "game_load slot<cvar:sel_load_slot>;"
			}
			if (*cvar:sel_load_slot == 7) {
				cmd "game_load slot<cvar:sel_load_slot>;"
			}
			/*
			 * It should be possible to check whether a save
			 * has been selected from the cvar and so avoid
			 * setting out all the if's,  but I can't seem to
			 * figure out how to test if the cvar is false.
			if (*cvar:sel_load_slot != false) {
				cmd "game_load slot<cvar:sel_load_slot>;"
			}
			 */
			else {
				// Popup message that says SELECT A LOAD
			}

			// Remove unnecessary cvar
			delete *cvar:sel_load_slot;
		}
	}

	// Switch display when user chooses New Campaign/Load Campaign
	func toggle_cmp_new {
		*node:root.cmp_sel.cmp_cmps@invis = false
		*node:root.cmp_sel.cmp_loads@invis = true
		*node:root.cmp_sel.cmp_saves@invis = true
		*node:root.cmp_sel.cmp_downloads@invis = true

		call *node:root.cmp_sel.btn_new.enable
		call *node:root.cmp_sel.btn_save.disable
		call *node:root.cmp_sel.btn_load.disable
		call *node:root.cmp_sel.btn_download.disable
		call *node:root.cmp_sel.btn_begin.enable
		*node:root.cmp_sel.cmp_loads.save<cvar:sel_load_slot>@color = "0.4 0.515 0.5 1"
		*cvar:sel_load_slot = false
	}
	func toggle_cmp_load {
		call *node:root.cmp_sel.btn_load.enable
		call *node:root.cmp_sel.btn_new.disable
		call *node:root.cmp_sel.btn_save.disable
		call *node:root.cmp_sel.btn_download.disable
		*node:root.cmp_sel.cmp_cmps@invis = true
		*node:root.cmp_sel.cmp_loads@invis = false
		*node:root.cmp_sel.cmp_saves@invis = true
		*node:root.cmp_sel.cmp_downloads@invis = true
		call *node:root.cmp_sel.btn_begin.disable
	}
	func toggle_cmp_download {
		call *node:root.cmp_sel.btn_new.disable
		call *node:root.cmp_sel.btn_save.disable
		call *node:root.cmp_sel.btn_load.disable
		call *node:root.cmp_sel.btn_download.enable
		*node:root.cmp_sel.cmp_cmps@invis = true
		*node:root.cmp_sel.cmp_loads@invis = true
		*node:root.cmp_sel.cmp_saves@invis = true
		*node:root.cmp_sel.cmp_downloads@invis = false
		call *node:root.cmp_sel.btn_begin.disable
		cmd	"web_listcgame 0;"
	}
	func toggle_cmp_save {
		call *node:root.cmp_sel.btn_download.disable
		call *node:root.cmp_sel.btn_new.disable
		call *node:root.cmp_sel.btn_save.enable
		call *node:root.cmp_sel.btn_load.disable
		*node:root.cmp_sel.cmp_cmps@invis = true
		*node:root.cmp_sel.cmp_loads@invis = true
		*node:root.cmp_sel.cmp_saves@invis = false
		*node:root.cmp_sel.cmp_downloads@invis = true
		call *node:root.cmp_sel.btn_begin.disable
	}

	func onWindowOpened
	{
		cmd "set sel_load_slot 0;game_setmode;cp_getcampaigns;cp_getdescription <cvar:cp_campaign>;game_comments;"
		call *node:root.toggle_cmp_load
	}

	// Fuzzy screen effect (see assets.ufo)
	fuzzyScreen overlay { }
}

window campaign_main extends campaign
{
	{
		//background	"ui/main_bg"
		fill		true
		starlayout	true
		bgcolor		"0 0 0 0.5"
	}

	panel buttons
	{
		{
			size			"400 700"
			align			LAYOUTALIGN_TOP
			layout			LAYOUT_TOP_DOWN_FLOW
			layoutMargin	15
			contentalign	LAYOUTALIGN_MIDDLE
		}
		panel spacer
		{
			{
				size	"0 235"
			}
		}
		MainMenuBtn continue
		{
			tooltip	"_Leave this menu and continue playing."
			onClick	{ cmd "ui_pop;" }
			string	"_CONTINUE"
		}
		MainMenu2Btn load
		{
			onClick	{
				*node:root.cmp_sel@invis = false
				*node:root.cmp_sel.btn_new@invis = true
				*node:root.cmp_sel.btn_save@invis = true
				*node:root.cmp_sel.btn_load@invis = false
				*node:root.cmp_sel.btn_download@invis = true
				*node:root.buttons@invis = true
				*node:root.cmp_sel.btn_begin@invis = false
				call *node:root.toggle_cmp_load
			}
			string	"_LOAD"
		}
		MainMenu2Btn save
		{
			onClick	{
				*node:root.cmp_sel@invis = false
				*node:root.cmp_sel.btn_new@invis = true
				*node:root.cmp_sel.btn_save@invis = false
				*node:root.cmp_sel.btn_load@invis = true
				*node:root.cmp_sel.btn_download@invis = true
				*node:root.buttons@invis = true
				*node:root.cmp_sel.btn_begin@invis = true
				call *node:root.toggle_cmp_save
			}
			string	"_SAVE"
		}
		MainMenu2Btn options
		{
			onClick	{ cmd "ui_push options;" }
			string	"_OPTIONS"
		}
		MainMenuExitBtn exit
		{
			onClick {
				if ( *cvar:mn_fastexit == 1 ) {
					cmd "game_exit;"
				} else {
					cmd "ui_push popup_exit_confirmation;"
				}
			}
			string	"_EXIT"
		}
	}

	func onWindowActivate
	{
		*node:root.cmp_sel@invis = true
		*node:root.cmp_sel.btn_new@invis = true
		*node:root.cmp_sel.btn_save@invis = true
		*node:root.cmp_sel.btn_load@invis = true
		*node:root.cmp_sel.btn_load@pos = "0 0"
		*node:root.cmp_sel.btn_download@invis = true
		*node:root.cmp_sel.btn_back@onClick = {
			*node:root.cmp_sel@invis = true
			*node:root.buttons@invis = false
		}
	}

	func onWindowClosed
	{
		*node:root.cmp_sel@invis = true
		*node:root.buttons@invis = false
	}
}

// ==================
// QUICK LOAD MENU
// ==================

window quickload extends ipopup
{
	{
		pos			"264 262"
		size		"496 247"
		closebutton	true
	}

	string title
	{
		string		"_Reload campaign"
		width		"496"
	}

	string name_label
	{
		string		"_Are you sure that you really want to reload the last automatically saved campaign state?"
		pos			"26 58"
		size		"440 104"
		longlines	LONGLINES_WRAP
	}

	MainMenuBtn button_go
	{
		string		"_Load"
		pos			"266 188"
		width		"180"
		onClick		{ cmd "ui_pop;game_quickload;" *cvar:mn_fastexit = 1; }
	}

	fuzzyScreen overlay { }
}

// ==================
// LOST GAME MENU
// ==================

window lostgame
{
	/** @todo Remove me */
	{ } // empty properties to fix parsing problem with "image" token (behaviour or property?)

	image background
	{
		src		"background/losegame_bg"
	}

	func onWindowOpened
	{
		cmd "music_stop;snd_music Crystan-LooseGame;"
	}

	string title
	{
		string		"_You've lost the game"
		pos			"12 20"
		size		"1000 35"
		font		"f_menubig"
		contentalign	ALIGN_UC
		color		"0 0.8 0 1"
	}

	string lostgame_click
	{
		string		"_Click to continue"
		pos			"814 750"
		size		"200 20"
		font		"f_verysmall"
		contentalign	ALIGN_UR
		color		"0 0.8 0 0.9"
		ghost		true
	}

	zone leave
	{
		pos "0 0"
		size "1024 768"
		onClick {
			cmd "initmainui;"
		}
	}

	// reason why you've lost
	text reason
	{
		dataid	TEXT_STANDARD
		color		"0 0.8 0 0.9"
		bgcolor		"0.2 0.2 0.2 0.4"
		contentalign	ALIGN_UC
		pos			"30 600"
		size		"960 140"
		lineheight	"20"
		font		"f_normal"
		onClick		{ call *node:parent.leave@click }
		onViewChange	{
			*node:root.reason_scroll@fullsize = <fullsize>
			*node:root.reason_scroll@current = <viewpos>
			*node:root.reason_scroll@viewsize = <viewsize>
		}
	}

	vscrollbar reason_scroll {
		image		"ui/scrollbar_v"
		pos			"992 600"
		height		"140"
		current		0
		viewsize	12
		fullsize	12
		hidewhenunused true
		onClick		{ call *node:parent.leave@click }
		onChange	{ *node:root.reason@viewpos = <current> }
	}
}

// ==================
// END GAME MENU
// ==================

window endgame
{
	/** @todo Remove me */
	{ } // empty properties to fix parsing problem with "image" token (behaviour or property?)

	image background
	{
		src		"background/wingame_bg"
	}

	string title
	{
		string		"_Thank you for playing UFO:Alien Invasion"
		pos			"12 20"
		size		"1000 35"
		font		"f_menubig"
		contentalign	ALIGN_UC
		color		"0 0.8 0 1"
	}

	string endgame_click
	{
		string		"_Click to continue"
		pos			"814 750"
		size		"200 20"
		font		"f_verysmall"
		contentalign	ALIGN_UR
		color		"0 0.8 0 0.9"
		ghost		true
		onClick {
			cmd "initmainui; seq_start developers;"
		}
	}

	zone leave
	{
		pos "0 0"
		size "1024 768"
		onClick {
			cmd "initmainui; seq_start developers;"
		}
	}

	text reason
	{
		dataid		TEXT_STANDARD
		color		"0 0.8 0 0.9"
		bgcolor		"0.2 0.2 0.2 0.4"
		contentalign	ALIGN_UC
		pos			"30 500"
		size		"960 240"
		lineheight	"20"
		font		"f_normal"
		onClick		{ call *node:parent.leave@click }
		onViewChange	{
			*node:root.reason_scroll@fullsize = <fullsize>
			*node:root.reason_scroll@current = <viewpos>
			*node:root.reason_scroll@viewsize = <viewsize>
		}
	}

	vscrollbar reason_scroll {
		image		"ui/scrollbar_v"
		pos			"992 500"
		height		"240"
		current		0
		viewsize	12
		fullsize	12
		hidewhenunused true
		onClick		{ call *node:parent.leave@click }
		onChange	{ *node:root.reason@viewpos = <current> }
	}

	func onWindowOpened {
		cmd "music_stop;snd_music Crystan-WinGame;"
	}
}

// ========================
// POPUP EXIT CONFIRMATION
// ========================
window popup_exit_confirmation extends ipopup
{
	{
		bgcolor		"0.0784 0.1019 0.1019 1.0"
		pos			"256 256"
		size		"512 256"
		dragbutton	true
		closebutton	true
	}

	string title
	{
		width		"512"
		string		"_EXIT CAMPAIGN CONFIRMATION"
	}

	string exit_confirmation_label
	{
		string		"_You will lose all your campaign progress."
		pos			"26 58"
		size		"450 60"
	}

	MainMenuExitBtn btn_back
	{
		size 	"180 30"
		pos 	"332 226"
		string	"_QUIT"
		onClick	{ cmd "ui_pop;game_exit;" }
	}

	MainMenu2Btn bt_dontquit
	{
		size 	"180 30"
		pos		"140 226"
		string	"_BACK"
		onClick	{ cmd "ui_pop;" }
	}

	// Fuzzy screen effect (see assets.ufo)
	fuzzyScreen overlay { }
}
